#!/usr/bin/env python

import argparse
import os
from hen_utils import *
import subprocess

# arguments
parser = argparse.ArgumentParser()
parser.add_argument('-indel_prefix',
                    help='The sfs file prefix for indels generated by chromosomal_sfs.py',
                    required=True)
parser.add_argument('-snp_prefix',
                    help='The sfs file prefix for SNPs generated by chromosomal_sfs.py',
                    required=True)
parser.add_argument('-n', '--n', help='Sample size', required=True)
parser.add_argument('-out', '--output_prefix',
                    help='Output path and file prefix for control, data and results files',
                    required=True)
parser.add_argument('-evolgen', '--evolgen', help='If specified will submit to lab queue', action='store_true',
                    default=False)
parser.add_argument('-node', '--node', help='Will run on specified nodes', default='0')
args = parser.parse_args()

# variables
indel_prefix = extract_filename(args.indel_prefix)
indel_dir = file_location(args.indel_prefix)
snp_prefix = extract_filename(args.snp_prefix)
snp_dir = file_location(args.snp_prefix)
n = args.n
out = args.output_prefix
evolgen = args.evolgen
node = args.node
region_list = ['intron', 'intergenic']

# construct sfs combinations
file_dict = {}
indel_files = [indel_dir + x for x in os.listdir(indel_dir) if x.startswith(indel_prefix) and x.endswith('sfs.txt')]
snp_files = [snp_dir + x for x in os.listdir(snp_dir) if x.startswith(snp_prefix) and x.endswith('sfs.txt')]

# get chromosomal indel pairs
for sfs in indel_files:
    chromo = sfs.split('.')[-3]
    var = sfs.split('.')[-2].rstrip('_sfs')
    if chromo not in file_dict.keys():
        file_dict[chromo] = {var: sfs}
    else:
        file_dict[chromo][var] = sfs

# add snp locations
for sfs in snp_files:
    chromo = sfs.split('.')[-3]
    file_dict[chromo]['snp'] = sfs

# run anavar jobs per chromo
for chromosome in file_dict.keys():
    for r in region_list:
        run_out = out + '_' + chromosome + '_' + r + '_kappatest'

        try:

            anavar_cmd = ('./anavar.py '
                          '-i_sfs ' + file_dict[chromosome]['insertion'] + ' '
                          '-d_sfs ' + file_dict[chromosome]['deletion'] + ' '
                          '-s_sfs ' + file_dict[chromosome]['snp'] + ' '
                          '-n ' + n + ' '
                          '-r ' + r + ' '
                          '-lrt kappa '
                          '-out ' + run_out + ' '
                          '-node ' + node + ' ')
            subprocess.call(anavar_cmd, shell=True)

        except KeyError:
            print('Not all variant types have sfs file available for ' + chromosome +
                  ', please check input directories!')
            continue
